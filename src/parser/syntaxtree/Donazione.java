/* Generated by JTB 1.4.7 */
package parser.syntaxtree;

import parser.visitor.*;

public class Donazione implements INode {

  public NodeToken f0;

  public DatiDonatore f1;

  public NodeToken f2;

  public Data f3;

  public TipoDonazione f4;

  public NodeToken f5;

  public NodeToken f6;

  public NodeToken f7;

  public NodeToken f8;

  public NodeToken f9;

  public NodeListOptional f10;

  public NodeToken f11;

  public NodeToken f12;

  public NodeToken f13;

  private static final long serialVersionUID = 147L;

  public Donazione(final NodeToken n0, final DatiDonatore n1, final NodeToken n2, final Data n3, final TipoDonazione n4, final NodeToken n5, final NodeToken n6, final NodeToken n7, final NodeToken n8, final NodeToken n9, final NodeListOptional n10, final NodeToken n11, final NodeToken n12, final NodeToken n13) {
    f0 = n0;
    f1 = n1;
    f2 = n2;
    f3 = n3;
    f4 = n4;
    f5 = n5;
    f6 = n6;
    f7 = n7;
    f8 = n8;
    f9 = n9;
    f10 = n10;
    f11 = n11;
    f12 = n12;
    f13 = n13;
  }

  public <R, A> R accept(final IRetArguVisitor<R, A> vis, final A argu) {
    return vis.visit(this, argu);
  }

  public <R> R accept(final IRetVisitor<R> vis) {
    return vis.visit(this);
  }

  public <A> void accept(final IVoidArguVisitor<A> vis, final A argu) {
    vis.visit(this, argu);
  }

  public void accept(final IVoidVisitor vis) {
    vis.visit(this);
  }

}
