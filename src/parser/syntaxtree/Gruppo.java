/* Generated by JTB 1.4.7 */
package parser.syntaxtree;

import parser.visitor.*;

public class Gruppo implements INode {

  public NodeToken f0;

  public Nome f1;

  public NodeToken f2;

  public NodeToken f3;

  public NodeToken f4;

  public Data f5;

  public Indirizzo f6;

  public NodeToken f7;

  public Nome f8;

  public NodeToken f9;

  public Cognome f10;

  public NodeToken f11;

  public Nome f12;

  public NodeToken f13;

  public Cognome f14;

  public NodeToken f15;

  public NodeToken f16;

  public NodeOptional f17;

  public NodeToken f18;

  private static final long serialVersionUID = 147L;

  public Gruppo(final NodeToken n0, final Nome n1, final NodeToken n2, final NodeToken n3, final NodeToken n4, final Data n5, final Indirizzo n6, final NodeToken n7, final Nome n8, final NodeToken n9, final Cognome n10, final NodeToken n11, final Nome n12, final NodeToken n13, final Cognome n14, final NodeToken n15, final NodeToken n16, final NodeOptional n17, final NodeToken n18) {
    f0 = n0;
    f1 = n1;
    f2 = n2;
    f3 = n3;
    f4 = n4;
    f5 = n5;
    f6 = n6;
    f7 = n7;
    f8 = n8;
    f9 = n9;
    f10 = n10;
    f11 = n11;
    f12 = n12;
    f13 = n13;
    f14 = n14;
    f15 = n15;
    f16 = n16;
    f17 = n17;
    f18 = n18;
  }

  public <R, A> R accept(final IRetArguVisitor<R, A> vis, final A argu) {
    return vis.visit(this, argu);
  }

  public <R> R accept(final IRetVisitor<R> vis) {
    return vis.visit(this);
  }

  public <A> void accept(final IVoidArguVisitor<A> vis, final A argu) {
    vis.visit(this, argu);
  }

  public void accept(final IVoidVisitor vis) {
    vis.visit(this);
  }

}
