/* Generated by JTB 1.4.7 */


options
{
  JDK_VERSION = "1.5";
  static = true;
  // JTB_P = "parser";
}

PARSER_BEGIN(DoSaParser)
package parser;

import parser.visitor.*;
import parser.syntaxtree.*;


public class DoSaParser {

  public static void main(String args[]) {
    System.out.println("Inserire i dati");
    new DoSaParser(System.in);
    try {
      Scope scope = DoSaParser.Scope();
      DepthFirstVoidVisitor v = new MyVisitor();
      scope.accept(v);
    }
    catch (Exception e) {
      System.out.println("Oops.");
      System.out.println(e.getMessage());
    }
  }
}


class MyVisitor extends DepthFirstVoidVisitor {

  public void visit(NodeToken n) {
    System.out.println("visit " + n.tokenImage);
  }
}

class JTBToolkit {

  static NodeToken makeNodeToken(final Token t) {
    return new NodeToken(t.image.intern(), t.kind, t.beginLine, t.beginColumn, t.endLine, t.endColumn);
  }
}

PARSER_END(DoSaParser)

SKIP :
{
  " "
| "\t"
| "\r"
| "\n"
| "\f"
}

TOKEN :
{
  < SESSO : "M"| "m"| "F"| "f" >
| < TIPO : "Socio Donatore"| "Socio Benemerito"| "Occasionale"| "Socio Collaboratore" >
| < GRUPPOSANGUIGNO : "A"| "B"| "AB"| "0"| "NS" >
| < RH : "POSITIVO"| "NEGATIVO"| "NS" >
| < IDONEITA : "I"| "N" >
| < TIPODONAZIONE : "Multicomponent"| "Plasmaferesi"| "Piastrinoaferesi"| "Sangue Intero" >
| < UNITARACCOLTA : "Unit\u00e0 Raccolta Fissa" >
| < EMAIL : ( <ID>| "-"| "_"| "."| <NUM> )* "@" <ID> "." <ID> >
| < IDENTIFICATOR : <ID> ( " " <ID> )* >
| < ID : ["A"-"Z", "a"-"z"] ( ["A"-"Z", "a"-"z"] )* >
| < NUM : ["0"-"9"] ( ["0"-"9"] )* >
}

Scope Scope() :
{
  // --- JTB generated node declarations ---
  NodeListOptional n0 = new NodeListOptional();
  NodeChoice n1 = null;
  Gruppo n2 = null;
  Donatore n3 = null;
  Donazione n4 = null;
  NodeToken n5 = null;
  Token n6 = null;
}
{
  (
    (
      n2 = Gruppo()
      { n1 = new NodeChoice(n2, 0, 3); }
    |
      n3 = Donatore()
      { n1 = new NodeChoice(n3, 1, 3); }
    |
      n4 = Donazione()
      { n1 = new NodeChoice(n4, 2, 3); }
    )
    { n0.addNode(n1); }
  )*
  { n0.nodes.trimToSize(); }
  n6 = "."
  { n5 = JTBToolkit.makeNodeToken(n6); }
  { return new Scope(n0, n5); }
}

Gruppo Gruppo() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  Nome n2 = null;
  NodeToken n3 = null;
  Token n4 = null;
  NodeToken n5 = null;
  Token n6 = null;
  NodeToken n7 = null;
  Token n8 = null;
  Data n9 = null;
  Indirizzo n10 = null;
  NodeToken n11 = null;
  Token n12 = null;
  Nome n13 = null;
  NodeToken n14 = null;
  Token n15 = null;
  Cognome n16 = null;
  NodeToken n17 = null;
  Token n18 = null;
  Nome n19 = null;
  NodeToken n20 = null;
  Token n21 = null;
  Cognome n22 = null;
  NodeToken n23 = null;
  Token n24 = null;
  NodeToken n25 = null;
  Token n26 = null;
  NodeOptional n27 = new NodeOptional();
  Sezione n28 = null;
  NodeToken n29 = null;
  Token n30 = null;
}
{
  n1 = "***GRUPPO DONATORI***"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n2 = Nome()
  n4 = "- NUMERO:"
  { n3 = JTBToolkit.makeNodeToken(n4); }
  n6 = < NUM >
  { n5 = JTBToolkit.makeNodeToken(n6); }
  n8 = "- DATA FONDAZIONE:"
  { n7 = JTBToolkit.makeNodeToken(n8); }
  n9 = Data()
  n10 = Indirizzo()
  n12 = "- PRESIDENTE:"
  { n11 = JTBToolkit.makeNodeToken(n12); }
  n13 = Nome()
  n15 = "-"
  { n14 = JTBToolkit.makeNodeToken(n15); }
  n16 = Cognome()
  n18 = "- SEGRETARIO:"
  { n17 = JTBToolkit.makeNodeToken(n18); }
  n19 = Nome()
  n21 = "-"
  { n20 = JTBToolkit.makeNodeToken(n21); }
  n22 = Cognome()
  n24 = "- NUMERO ISCRITTI:"
  { n23 = JTBToolkit.makeNodeToken(n24); }
  n26 = < NUM >
  { n25 = JTBToolkit.makeNodeToken(n26); }
  [
    n28 = Sezione()
    { n27.addNode(n28); }
  ]
  n30 = ";"
  { n29 = JTBToolkit.makeNodeToken(n30); }
  { return new Gruppo(n0, n2, n3, n5, n7, n9, n10, n11, n13, n14, n16, n17, n19, n20, n22, n23, n25, n27, n29); }
}

Donatore Donatore() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  Nome n2 = null;
  Cognome n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  NodeToken n8 = null;
  Token n9 = null;
  Data n10 = null;
  NodeToken n11 = null;
  Token n12 = null;
  NodeToken n13 = null;
  Token n14 = null;
  NodeOptional n15 = new NodeOptional();
  CodiceFiscale n16 = null;
  Indirizzo n17 = null;
  NodeOptional n18 = new NodeOptional();
  NodeSequence n19 = null;
  NodeToken n20 = null;
  Token n21 = null;
  Telefono n22 = null;
  NodeOptional n23 = new NodeOptional();
  NodeSequence n24 = null;
  NodeToken n25 = null;
  Token n26 = null;
  Telefono n27 = null;
  NodeOptional n28 = new NodeOptional();
  EMail n29 = null;
  NodeToken n30 = null;
  Token n31 = null;
  NodeToken n32 = null;
  Token n33 = null;
  NodeToken n34 = null;
  Token n35 = null;
  NodeToken n36 = null;
  Token n37 = null;
  NodeToken n38 = null;
  Token n39 = null;
  NodeToken n40 = null;
  Token n41 = null;
  NodeToken n42 = null;
  Token n43 = null;
  Data n44 = null;
  NodeToken n45 = null;
  Token n46 = null;
  NodeToken n47 = null;
  Token n48 = null;
  NodeToken n49 = null;
  Token n50 = null;
  NodeToken n51 = null;
  Token n52 = null;
  NumeroDonazioni n53 = null;
  Idoneo n54 = null;
  DataProssimaDonazione n55 = null;
  TipoDonatore n56 = null;
  Sezione n57 = null;
  NodeToken n58 = null;
  Token n59 = null;
}
{
  n1 = "***DONATORE***"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n2 = Nome()
  n3 = Cognome()
  n5 = "- SESSO:"
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n7 = < SESSO >
  { n6 = JTBToolkit.makeNodeToken(n7); }
  n9 = "- DATA NASCITA:"
  { n8 = JTBToolkit.makeNodeToken(n9); }
  n10 = Data()
  n12 = "- STATO NASCITA:"
  { n11 = JTBToolkit.makeNodeToken(n12); }
  n14 = < IDENTIFICATOR >
  { n13 = JTBToolkit.makeNodeToken(n14); }
  [
    n16 = CodiceFiscale()
    { n15.addNode(n16); }
  ]
  n17 = Indirizzo()
  [
    { n19 = new NodeSequence(2); }
    n21 = "- TELEFONO FISSO:"
    { n20 = JTBToolkit.makeNodeToken(n21); }
    { n19.addNode(n20); }
    n22 = Telefono()
    { n19.addNode(n22); }
    { n18.addNode(n19); }
  ]
  [
    { n24 = new NodeSequence(2); }
    n26 = "- TELEFONO CELLULARE:"
    { n25 = JTBToolkit.makeNodeToken(n26); }
    { n24.addNode(n25); }
    n27 = Telefono()
    { n24.addNode(n27); }
    { n23.addNode(n24); }
  ]
  [
    n29 = EMail()
    { n28.addNode(n29); }
  ]
  n31 = "- CITTADINANZA:"
  { n30 = JTBToolkit.makeNodeToken(n31); }
  n33 = < IDENTIFICATOR >
  { n32 = JTBToolkit.makeNodeToken(n33); }
  n35 = "- GRUPPO SANGUIGNO:"
  { n34 = JTBToolkit.makeNodeToken(n35); }
  n37 = < GRUPPOSANGUIGNO >
  { n36 = JTBToolkit.makeNodeToken(n37); }
  n39 = "- RH:"
  { n38 = JTBToolkit.makeNodeToken(n39); }
  n41 = < RH >
  { n40 = JTBToolkit.makeNodeToken(n41); }
  n43 = "- DATA ISCRIZIONE:"
  { n42 = JTBToolkit.makeNodeToken(n43); }
  n44 = Data()
  n46 = "- GRUPPO LOCALE:"
  { n45 = JTBToolkit.makeNodeToken(n46); }
  n48 = < NUM >
  { n47 = JTBToolkit.makeNodeToken(n48); }
  n50 = "- TESSERA GRUPPO LOCALE:"
  { n49 = JTBToolkit.makeNodeToken(n50); }
  n52 = < NUM >
  { n51 = JTBToolkit.makeNodeToken(n52); }
  n53 = NumeroDonazioni()
  n54 = Idoneo()
  n55 = DataProssimaDonazione()
  n56 = TipoDonatore()
  n57 = Sezione()
  n59 = ";"
  { n58 = JTBToolkit.makeNodeToken(n59); }
  { return new Donatore(n0, n2, n3, n4, n6, n8, n10, n11, n13, n15, n17, n18, n23, n28, n30, n32, n34, n36, n38, n40, n42, n44, n45, n47, n49, n51, n53, n54, n55, n56, n57, n58); }
}

Donazione Donazione() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  DatiDonatore n2 = null;
  NodeToken n3 = null;
  Token n4 = null;
  Data n5 = null;
  TipoDonazione n6 = null;
  NodeToken n7 = null;
  Token n8 = null;
  NodeToken n9 = null;
  Token n10 = null;
  NodeToken n11 = null;
  Token n12 = null;
  NodeToken n13 = null;
  Token n14 = null;
  NodeToken n15 = null;
  Token n16 = null;
  NodeListOptional n17 = new NodeListOptional();
  NodeChoice n18 = null;
  NodeToken n19 = null;
  Token n20 = null;
  NodeToken n21 = null;
  Token n22 = null;
  NodeToken n23 = null;
  Token n24 = null;
  NodeToken n25 = null;
  Token n26 = null;
  NodeToken n27 = null;
  Token n28 = null;
}
{
  n1 = "***DONAZIONE***"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n2 = DatiDonatore()
  n4 = "- DATA DONAZIONE:"
  { n3 = JTBToolkit.makeNodeToken(n4); }
  n5 = Data()
  n6 = TipoDonazione()
  n8 = "- UNITA' RACCOLTA:"
  { n7 = JTBToolkit.makeNodeToken(n8); }
  n10 = < UNITARACCOLTA >
  { n9 = JTBToolkit.makeNodeToken(n10); }
  n12 = "- COMUNE DONAZIONE:"
  { n11 = JTBToolkit.makeNodeToken(n12); }
  n14 = < IDENTIFICATOR >
  { n13 = JTBToolkit.makeNodeToken(n14); }
  n16 = "- ASL DONAZIONE:"
  { n15 = JTBToolkit.makeNodeToken(n16); }
  (
    (
      n20 = < IDENTIFICATOR >
      { n19 = JTBToolkit.makeNodeToken(n20); }
      { n18 = new NodeChoice(n19, 0, 2); }
    |
      n22 = < NUM >
      { n21 = JTBToolkit.makeNodeToken(n22); }
      { n18 = new NodeChoice(n21, 1, 2); }
    )
    { n17.addNode(n18); }
  )*
  { n17.nodes.trimToSize(); }
  n24 = "- PUNTO PRELIEVO:"
  { n23 = JTBToolkit.makeNodeToken(n24); }
  n26 = < NUM >
  { n25 = JTBToolkit.makeNodeToken(n26); }
  n28 = ";"
  { n27 = JTBToolkit.makeNodeToken(n28); }
  { return new Donazione(n0, n2, n3, n5, n6, n7, n9, n11, n13, n15, n17, n23, n25, n27); }
}

Indirizzo Indirizzo() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeListOptional n4 = new NodeListOptional();
  NodeChoice n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  NodeToken n8 = null;
  Token n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
  NodeToken n12 = null;
  Token n13 = null;
  NodeToken n14 = null;
  Token n15 = null;
  NodeToken n16 = null;
  Token n17 = null;
  NodeOptional n18 = new NodeOptional();
  NodeSequence n19 = null;
  NodeToken n20 = null;
  Token n21 = null;
  NodeToken n22 = null;
  Token n23 = null;
}
{
  n1 = "- INDIRIZZO:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < IDENTIFICATOR >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  (
    (
      n7 = < IDENTIFICATOR >
      { n6 = JTBToolkit.makeNodeToken(n7); }
      { n5 = new NodeChoice(n6, 0, 2); }
    |
      n9 = < NUM >
      { n8 = JTBToolkit.makeNodeToken(n9); }
      { n5 = new NodeChoice(n8, 1, 2); }
    )
    { n4.addNode(n5); }
  )*
  { n4.nodes.trimToSize(); }
  n11 = "- CAP:"
  { n10 = JTBToolkit.makeNodeToken(n11); }
  n13 = < NUM >
  { n12 = JTBToolkit.makeNodeToken(n13); }
  n15 = "- COMUNE:"
  { n14 = JTBToolkit.makeNodeToken(n15); }
  n17 = < IDENTIFICATOR >
  { n16 = JTBToolkit.makeNodeToken(n17); }
  [
    { n19 = new NodeSequence(2); }
    n21 = "- STATO:"
    { n20 = JTBToolkit.makeNodeToken(n21); }
    { n19.addNode(n20); }
    n23 = < IDENTIFICATOR >
    { n22 = JTBToolkit.makeNodeToken(n23); }
    { n19.addNode(n22); }
    { n18.addNode(n19); }
  ]
  { return new Indirizzo(n0, n2, n4, n10, n12, n14, n16, n18); }
}

Sezione Sezione() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeOptional n2 = new NodeOptional();
  NodeToken n3 = null;
  Token n4 = null;
  NodeOptional n5 = new NodeOptional();
  NodeToken n6 = null;
  Token n7 = null;
  NodeListOptional n8 = new NodeListOptional();
  NodeSequence n9 = null;
  NodeToken n10 = null;
  Token n11 = null;
  NodeOptional n12 = null;
  NodeToken n13 = null;
  Token n14 = null;
  NodeOptional n15 = null;
  NodeToken n16 = null;
  Token n17 = null;
}
{
  n1 = "- SEZIONE:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  [
    n4 = < IDENTIFICATOR >
    { n3 = JTBToolkit.makeNodeToken(n4); }
    { n2.addNode(n3); }
  ]
  [
    n7 = < NUM >
    { n6 = JTBToolkit.makeNodeToken(n7); }
    { n5.addNode(n6); }
  ]
  (
    { n12 = new NodeOptional(); }
    { n15 = new NodeOptional(); }
    { n9 = new NodeSequence(3); }
    n11 = "-"
    { n10 = JTBToolkit.makeNodeToken(n11); }
    { n9.addNode(n10); }
    [
      n14 = < IDENTIFICATOR >
      { n13 = JTBToolkit.makeNodeToken(n14); }
      { n12.addNode(n13); }
    ]
    { n9.addNode(n12); }
    [
      n17 = < NUM >
      { n16 = JTBToolkit.makeNodeToken(n17); }
      { n15.addNode(n16); }
    ]
    { n9.addNode(n15); }
    { n8.addNode(n9); }
  )*
  { n8.nodes.trimToSize(); }
  { return new Sezione(n0, n2, n5, n8); }
}

CodiceFiscale CodiceFiscale() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeListOptional n2 = new NodeListOptional();
  NodeChoice n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
}
{
  n1 = "- CODICE FISCALE:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  (
    (
      n5 = < IDENTIFICATOR >
      { n4 = JTBToolkit.makeNodeToken(n5); }
      { n3 = new NodeChoice(n4, 0, 2); }
    |
      n7 = < NUM >
      { n6 = JTBToolkit.makeNodeToken(n7); }
      { n3 = new NodeChoice(n6, 1, 2); }
    )
    { n2.addNode(n3); }
  )*
  { n2.nodes.trimToSize(); }
  { return new CodiceFiscale(n0, n2); }
}

Telefono Telefono() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeOptional n2 = new NodeOptional();
  NodeSequence n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
}
{
  n1 = < NUM >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  [
    { n3 = new NodeSequence(2); }
    n5 = "/"
    { n4 = JTBToolkit.makeNodeToken(n5); }
    { n3.addNode(n4); }
    n7 = < NUM >
    { n6 = JTBToolkit.makeNodeToken(n7); }
    { n3.addNode(n6); }
    { n2.addNode(n3); }
  ]
  { return new Telefono(n0, n2); }
}

EMail EMail() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
}
{
  n1 = "- EMAIL:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < EMAIL >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  { return new EMail(n0, n2); }
}

Idoneo Idoneo() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
}
{
  n1 = "- IDONEO:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < IDONEITA >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  { return new Idoneo(n0, n2); }
}

DataProssimaDonazione DataProssimaDonazione() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  Data n2 = null;
}
{
  n1 = "- PROSSIMA DATA DISPONIBILE PER DONAZIONE:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n2 = Data()
  { return new DataProssimaDonazione(n0, n2); }
}

TipoDonatore TipoDonatore() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
}
{
  n1 = "- TIPOLOGIA DONATORE:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < TIPO >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  { return new TipoDonatore(n0, n2); }
}

TipoDonazione TipoDonazione() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
}
{
  n1 = "- TIPO DI DONAZIONE:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < TIPODONAZIONE >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  { return new TipoDonazione(n0, n2); }
}

DatiDonatore DatiDonatore() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeChoice n2 = null;
  NodeSequence n3 = null;
  Nome n4 = null;
  NodeToken n5 = null;
  Token n6 = null;
  Cognome n7 = null;
  CodiceFiscale n8 = null;
}
{
  n1 = "- DONATORE:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  (
    (
      { n3 = new NodeSequence(3); }
      n4 = Nome()
      { n3.addNode(n4); }
      n6 = "-"
      { n5 = JTBToolkit.makeNodeToken(n6); }
      { n3.addNode(n5); }
      n7 = Cognome()
      { n3.addNode(n7); }
      { n2 = new NodeChoice(n3, 0, 2); }
    |
      n8 = CodiceFiscale()
      { n2 = new NodeChoice(n8, 1, 2); }
    )
    
  )
  { return new DatiDonatore(n0, n2); }
}

NumeroDonazioni NumeroDonazioni() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
}
{
  n1 = "- NUMERO DI DONAZIONI:"
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = < NUM >
  { n2 = JTBToolkit.makeNodeToken(n3); }
  { return new NumeroDonazioni(n0, n2); }
}

Nome Nome() :
{
  // --- JTB generated node declarations ---
  NodeChoice n0 = null;
  NodeToken n1 = null;
  Token n2 = null;
  NodeToken n3 = null;
  Token n4 = null;
  NodeToken n5 = null;
  Token n6 = null;
}
{
  (
    (
      n2 = "Nome:"
      { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0, 2); }
    |
      n4 = "- NOME:"
      { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1, 2); }
    )
    
  )
  n6 = < IDENTIFICATOR >
  { n5 = JTBToolkit.makeNodeToken(n6); }
  { return new Nome(n0, n5); }
}

Cognome Cognome() :
{
  // --- JTB generated node declarations ---
  NodeChoice n0 = null;
  NodeToken n1 = null;
  Token n2 = null;
  NodeToken n3 = null;
  Token n4 = null;
  NodeToken n5 = null;
  Token n6 = null;
}
{
  (
    (
      n2 = "Cognome:"
      { n1 = JTBToolkit.makeNodeToken(n2); }
      { n0 = new NodeChoice(n1, 0, 2); }
    |
      n4 = "- COGNOME:"
      { n3 = JTBToolkit.makeNodeToken(n4); }
      { n0 = new NodeChoice(n3, 1, 2); }
    )
    
  )
  n6 = < IDENTIFICATOR >
  { n5 = JTBToolkit.makeNodeToken(n6); }
  { return new Cognome(n0, n5); }
}

Data Data() :
{
  // --- JTB generated node declarations ---
  NodeToken n0 = null;
  Token n1 = null;
  NodeToken n2 = null;
  Token n3 = null;
  NodeToken n4 = null;
  Token n5 = null;
  NodeToken n6 = null;
  Token n7 = null;
  NodeToken n8 = null;
  Token n9 = null;
}
{
  n1 = < NUM >
  { n0 = JTBToolkit.makeNodeToken(n1); }
  n3 = "/"
  { n2 = JTBToolkit.makeNodeToken(n3); }
  n5 = < NUM >
  { n4 = JTBToolkit.makeNodeToken(n5); }
  n7 = "/"
  { n6 = JTBToolkit.makeNodeToken(n7); }
  n9 = < NUM >
  { n8 = JTBToolkit.makeNodeToken(n9); }
  { return new Data(n0, n2, n4, n6, n8); }
}
